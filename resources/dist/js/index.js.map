{"version":3,"sources":["init.js","data.js","util.js","tmpl.js","storage.js","store.js","result-text.js","slack.js","head-count.js","modal.js","clock.js","ju.js","quick-search.js","random-target.js","game.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpfile":"index.js","sourcesContent":["// initialize\n(function(sd) {\n    sd.JQ = {\n        DOC: $(document),\n        BODY: $('body')\n    };\n})((window.sd = window.sd || {}));\n","var backpacker = [];\nvar ju = [];\n// var ju = [\n//     \"청소기\",\n//     \"대걸레\",\n//     \"마루바닥\",\n//     \"집기닦이\",\n//     \"공기청정기\",\n//     \"유리청소\",\n//     \"전등\",\n// ];\n\n// 한글 명칭 추가\nbackpacker = (function (bp) {\n    var ko = {\n        ceo: '대표이사',\n        designer: '디자이너',\n        engineer: '개발자',\n        trade: 'B2B',\n        scouter: '작가영입',\n        manager: '운영',\n        educator: '작가교육',\n        marketer: '마케팅',\n        pr: '홍보',\n    }\n    \n    bp = bp.map(function (v, i, a) {\n        var t = '' + v.team;\n        t = t.toLowerCase();\n\n        if (typeof t === 'undefined') {\n            return\n        }\n\n        for (var k in ko) {\n            var re = new RegExp(k, 'g');\n            var res = t.match(re);\n\n            if (Array.isArray(res)) {\n                v.ko = ko[k];\n                break;\n            }\n        }\n        return v;\n    });\n\n    return bp;\n}(backpacker));\n","","sd.tmpl = {\n    member: function(data) {\n        var is_disable = data.is_disable ? 'is_disable' : '';\n\n        var member = `<label\n            class=\"member-list member ${is_disable}\"\n            style=\"background-color:${data.team_color}\"\n            data-member-id=\"${data.id}\"\n            data-team-eng=\"${data.team_eng}\"\n            data-team-color=\"${data.team_color}\"\n            >\n            <input type=\"checkbox\" class=\"js-all-check-item\"/>\n            <span class=\"name\">${data.name}</span>\n            <span class=\"team\">${data.team}</span>\n            <span class=\"position\">${data.position}</span>\n        </label>`;\n        return member;\n    }\n};\n","/**\n * 로컬스토리지 입출력 함수\n * @constructor\n */\nfunction Storage() {\n    this.getItem = function (name) {\n        try {\n            return JSON.parse(window.localStorage.getItem(name));\n        } catch (e) {\n            alert('error');\n            return;\n        }\n    }\n    this.setItem = function (name, value) {\n        try {\n            window.localStorage.setItem(name, JSON.stringify(value));\n        } catch (e) {\n            alert('error');\n            return;\n        }\n    }\n}","// pubsub\nvar store = {\n    events: {},\n    on: function (evt, fn) {\n        this.events[evt] = this.events[evt] || [];\n        this.events[evt].push(fn);\n        \n        return this;\n    },\n    offForceArray: function (eventArray) {\n        var self = this;\n\n        try {\n            if (!Array.isArray(eventArray)) throw new Error('배열을 입력해주세요.');\n            eventArray.forEach(function (evt, i) {\n                if (self.events.hasOwnProperty(evt)) {\n                    delete self.events[evt];\n                }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    off: function (evt, fn) {\n        if (this.events[evt]) {\n            var i = 0;\n            for (; i < this.events[evt].length; i++) {\n                if (this.events[evt][i] === fn) {\n                    this.events[evt].splice(i, 1);\n                    break;\n                }\n            }\n        }\n    },\n    emit: function (evt, data) {\n        var obj = [];\n        if (this.events[evt]) {\n            this.events[evt].forEach(function (fn) {\n                obj.push(fn(data));\n            });\n        }\n        return obj;\n    }\n};\n","// 결과 출력 관련\n(function () {\n    // 결과 텍스트\n    var renderText = '';\n\n    // jquery dom resultText\n    var $resultText = $('.resultText');\n    \n    // jquery dom textarea\n    var $textarea = $resultText.find('textarea');\n    \n    // 게임 명칭 리스트\n    var game = {\n        one: '한명뽑기',\n        jo_member: '랜덤조',\n        jo_team: '랜덤조',\n        ju: '주번뽑기',\n    };\n        \n    // 텍스트결과 토글\n    function toggleResultText() {\n        var target = $resultText[0];\n        target.style.display = (target.style.display === 'none') ? '' : 'none';\n    }\n        \n    // 결과 복사\n    function copy() {\n        var msg = '복사 실패';\n        var domTextarea = $textarea[0];\n        \n        if (!domTextarea.value) return false;\n        \n        domTextarea.select();\n        \n        if (document.execCommand(\"Copy\")) {\n            msg = '복사 성공!';\n        }\n        \n        alert(msg);\n    }\n    \n    // 오늘 날짜 반환\n    function getDate() {\n        var date = new Date();\n        var today = date.getDay();\n        var week = ['일', '월', '화', '수', '목', '금', '토'];\n        var yyyymmdd = date.getFullYear() + '년' +\n            (\"0\" + (date.getMonth() + 1)).slice(-2) + '월' +\n            (\"0\" + date.getDate()).slice(-2) + '일' +\n            ' (' + week[today] + ') ' +\n            (\"0\" + date.getHours()).slice(-2) + '시' +\n            (\"0\" + date.getMinutes()).slice(-2) + '분\\n';\n\n        return yyyymmdd;\n    }\n\n    // 결과 텍스트로 만들기\n    function resultText() {\n        // 사다리 종류\n        var _sadariType = store.emit('getGameType')[0];\n        \n        // 결과\n        var resultText_list = [];\n        \n        // 조 번호\n        var teamNumber = 1;\n\n        renderText = getDate();\n        renderText += game[_sadariType] + '\\n';\n\n        // 데이터 만들기\n        $('[data-sadari=\"result\"] .group.item').each(function (i, e) {\n            var obj = {};\n            obj.group = $(e).find('.group.title').text();\n            obj.member = [];\n\n            $(e).find('.member-list.member').each(function (i, e) {\n                var member = {}\n                member.name = $(e).find('.name').text();\n                member.team = $(e).find('.team').text();\n                obj.member.push(member);\n            });\n            resultText_list.push(obj);\n        });\n\n        // 텍스트 가공\n        resultText_list.forEach(function (v, i, a) {\n            var vMax = a.length - 1;\n            var thisCols = '';\n\n            for(var k in v) {\n                if (Array.isArray(v[k])) {\n                    var max = v[k].length - 1;\n                    v[k].forEach(function (v, i, a) {\n                        thisCols += '(' + teamNumber + ')' + v.name;\n                        // thisCols += v.team;\n                        if (max !== i) {\n                            thisCols += ', ';\n                        }\n                        teamNumber += 1;\n                    });\n                    continue;\n                }\n\n                if (v[k] !== '') {\n                    thisCols += '\\n[' + v[k] + ']\\n';\n                }\n            }\n\n            if (vMax !== i) {\n                thisCols += '\\n';\n            }\n\n            renderText += thisCols;\n        });\n\n        $textarea\n            .attr('rows', resultText_list.length)\n            .html(renderText);\n        $resultText.hide();\n    }\n\n    // bind Event\n    store\n        .on('renderTextResult', resultText)\n        .on('getRenderText', function () {\n            return renderText;\n        });\n    $(document)\n        .on('click', '[name=copy]', copy)\n        .on('click', '[data-sadari=\"result-toggle\"]', toggleResultText);\n}());\n","// 슬랙으로 결과 보내기\nfunction sendSlack(text) {\n    var text = store.emit('getRenderText')[0];\n    var channelName = 'random';\n    var token = 'KAqNxVAidiPcbZ3EixDDIPqg';\n    var url = 'https://backpackr-talk.slack.com/services/hooks/slackbot?token=' + token + '&channel=' + channelName;\n    var param = {\n        payload: text\n    };\n\n    function success(response) {\n        (response === 'ok') ? alert('전송 완료!') : '';\n    }\n\n    $.post(url, param)\n        .done(success);\n}\n\n$(document).on('click', '[data-sadari=\"send-slack\"]', function () {\n    if (confirm('결과를 slack으로 전송하시겠습니까?')) {\n        sendSlack();\n    }\n});\n","// 인원 카운트\n(function () {\n    var $memberListNumber = $('.member-list.number');\n    \n    function renderMemberCount(member) {\n        var max = member.length;\n        var disable = member.filter(function (v) {\n            if (v.is_disable === true) {\n                return true;\n            }\n            return false;\n        });\n        \n        $memberListNumber.html((max - disable.length) + '/' + max);\n    }\n    \n    store.on('updateMemberCount', renderMemberCount);\n})();\n","/**\n * modal\n */\nvar modal = (function(window, document, $) {\n    var $modal = $('<div class=\"modal\"></div>');\n    var $modalMask = $('<div class=\"modal-mask\"></div>');\n    var $modalBox = $('<div class=\"modal-box\"></div>');\n    var $modalHead = $('<div class=\"modal-head\"></div>');\n    var $modalBody = $('<div data-sadari=\"result\" class=\"modal-body\"></div>');\n    var $modalClose = $(\n        '<button class=\"modal-close\" type=\"button\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></div>'\n    );\n    var optionNumber =\n        '<div class=\"option root\">' +\n        '<button data-sadari=\"send-slack\" type=\"button\" class=\"option item\"><i class=\"fa fa-slack\" aria-hidden=\"true\"></i> slack</button>' +\n        '<label class=\"option item\">' +\n        '<input type=\"checkbox\" data-option=\"number\">' +\n        ' 번호 표시 </label>' +\n        '</div>';\n\n    $modal.append($modalMask, $modalBox);\n    $modalBox.append($modalHead, $modalBody, $modalClose);\n\n    function open(content, title) {\n        title = title || '결과';\n        $modalHead.empty().append(title, $(optionNumber));\n        $modalBody.empty().append(content);\n        $modal.appendTo(sd.JQ.BODY);\n    }\n\n    function close() {\n        if (confirm('결과창을 닫으시겠습니까?')) {\n            $modal.attr('data-option', '').remove();\n        }\n    }\n\n    function _handleKeyup(e) {\n        if (sd.JQ.DOC.find('.modal').length && e.which == 27) {\n            close();\n        }\n    }\n\n    sd.JQ.DOC.on('click', '.modal-mask, .modal-close', close).on(\n        'keyup',\n        _handleKeyup\n    );\n\n    return {\n        open: open,\n        close: close\n    };\n})(window, document, jQuery);\n","function Clock(elm) {\n    this.elm = document.querySelector(elm) || '';\n    this.week = ['일', '월', '화', '수', '아직 목', '불금', '토'];\n\n    this.run = function() {\n        function start() {\n            var date = new Date();\n            var today = date.getDay();\n            var yyyymmdd =\n                '<span class=\"date\">' +\n                date.getFullYear() +\n                '년' +\n                ('0' + (date.getMonth() + 1)).slice(-2) +\n                '월' +\n                ('0' + date.getDate()).slice(-2) +\n                '일' +\n                ' (' +\n                this.week[today] +\n                ')</span>' +\n                '<span class=\"time\">' +\n                ('0' + date.getHours()).slice(-2) +\n                '시' +\n                ('0' + date.getMinutes()).slice(-2) +\n                '분' +\n                '</span>';\n\n            this.elm.innerHTML = yyyymmdd;\n        }\n        start.call(this);\n        setInterval(start.bind(this), 1000);\n    };\n}\n\nvar clock = new Clock('.clock');\n\nclock.run();\n","// 항목추가\nvar storage = new Storage();\n\n// 아이템 추가 삭제 출력 ui\nfunction itemListUi(rootUi) {\n    var $rootUi = $(rootUi);\n    var storageId = $rootUi.attr('data-tab-id');\n    var ju = storage.getItem(storageId) || [];\n    \n    // 주번 항목 추가\n    function addJu(e) {\n        var eTarget = e.currentTarget;\n        var input = $(eTarget).parents('.ju-add').find('[name=name]');\n        var name = input[0].value;\n        var data;\n        \n        if (name) {\n            data = (Array.isArray(ju) === true) ? name : {name: name, team: t};\n            ju.push(data);\n            renderJu();\n            input[0].value = '';\n        }\n        \n        input[0].focus();\n    }\n\n    // 주번 항목 삭제\n    function removeJu() {\n        var idx = $(this).index();\n        ju.splice(idx, 1);\n        \n        renderJu();\n    }\n\n    // 주번 랜더링\n    function renderJu() {\n        var html = '<ul class=\"ju-list\">';\n        var icon = '';\n        \n        if (storageId === 'son') {\n            icon = '<i class=\"fa fa-gift\" aria-hidden=\"true\"></i> ';\n        }\n        \n        ju.forEach(function (v) {\n            \n            return html += '<li>' + icon + v + '</li>';\n        });\n        html += '</ul>';\n        \n        $rootUi.find('.tab-item-result').html(html);\n        \n        if (storageId) {\n            storage.setItem(storageId, ju);\n        }\n    }\n    \n    function getJu() {\n        return ju;\n    }\n\n    // 주번 랜더링\n    function initJu(ui) {\n        if (storageId && !ju) {\n            storage.setItem(storageId, ju);\n        }\n        \n        renderJu();\n    }\n        \n    function _handleKeypressAdd(e) {\n        if (e.keyCode == 13) addJu(e);\n    }\n        \n    $rootUi\n        .on('click', '.ju-add button', addJu)\n        .on('keypress', '.ju-add #name', _handleKeypressAdd)\n        .on('click', '.ju-list li', removeJu);\n    \n    store.on('getJu-' + storageId, getJu);\n        \n    initJu();\n}\n\n(function () {\n    $('.js-tab-ju').each(function () {\n        itemListUi(this);\n    });\n}())\n","// 멤버 빠른 검색\nfunction quickSearch() {\n    // 현재 인풋 값\n    var inputValue;\n\n    // 직원 리스트\n    var memberList = store.emit('getAllMemberList')[0];\n\n    // 매칭된 index 리스트\n    var matchData = [];\n\n    // jquery dom search input\n    var $search = $('.search');\n\n    // jquery dom search result\n    var $result = $('.search-result');\n\n    // 결과 랜더링\n    function renderSearch() {\n        var html = '';\n        matchData.forEach(function(data) {\n            html += sd.tmpl.member(data);\n        });\n        $result.html(html);\n    }\n\n    // 매칭 맴버 데이터 업데이트\n    function updateSearchMemberList() {\n        matchData = [];\n\n        $.each(memberList, function(index, member) {\n            if (member.name.indexOf(inputValue) > -1) {\n                matchData.push(member);\n            }\n        });\n    }\n\n    // 결과 초기화\n    function clearResult() {\n        matchData = [];\n        $result.empty();\n    }\n\n    // 유저 선택 (클릭) 핸들러\n    function _handleChange(e) {\n        try {\n            var $parent = $(e.currentTarget.parentNode);\n            var id = $parent.attr('data-member-id');\n            var index = store.emit('findIndexById', id)[0];\n\n            store.emit('selectUser', index);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    // 유저 선택 (엔터) 핸들러)\n    function _handleEnter(e) {\n        if (e.target.value && e.keyCode === 13) {\n            var childLength = $result.children().length;\n            var $target = $result.children().eq(0);\n            var id = $target.attr('data-member-id');\n            var index = store.emit('findIndexById', id)[0];\n\n            if (childLength > 1) return false;\n\n            store.emit('selectUser', index);\n        }\n    }\n\n    // 키 이벤트 핸들러\n    function _handleKeyup(e) {\n        inputValue = e.target.value;\n\n        if (e.keyCode === 13) {\n            return false;\n        }\n\n        // 값이 비어있을 때 결과 비우기\n        if (!inputValue) {\n            clearResult();\n            return false;\n        }\n\n        updateSearchMemberList();\n        store.emit('renderSearch');\n    }\n\n    // 바인드 이벤트\n    function _bindEvent() {\n        $search.on('keyup', _handleKeyup).on('keypress', _handleEnter);\n        $result.on('change', '.js-all-check-item', _handleChange);\n        store.on('renderSearch', renderSearch);\n    }\n\n    // 초기화\n    function init() {\n        _bindEvent();\n    }\n\n    init();\n}\n","// 랜덤 대상\nfunction randomTarget() {\n    var $root = $('.sort');\n    var $result = $root.find('.sort-list');\n    var $btn = $('.js-split-view');\n\n    // 유저 선택\n    function _handleChange(e) {\n        var $target = $(e.currentTarget.parentNode);\n        var id = $target.attr('data-member-id');\n        var index = store.emit('findIndexById', id)[0];\n\n        store.emit('selectUser', index);\n    }\n\n    // 데이터 최신화 및 랜더링\n    function render() {\n        var memberList = store.emit('getAllMemberList')[0];\n        var html = [];\n        var enableList = [];\n        var disableList = [];\n        var elmList = [\n            $('<div>', { class: 'enable-list' }),\n            $('<div>', { class: 'disable-list' })\n        ];\n\n        // 기존 객체에 영향 없도록 깊은 복사\n        memberList = $.extend(true, [], memberList);\n        // 가나다 순 정렬\n        memberList.sort(function(a, b) {\n            // 오름차순\n            return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n        });\n\n        $.each(memberList, function(index, member) {\n            var list = enableList;\n\n            if (member.is_disable) {\n                list = disableList;\n            }\n\n            list.push(member);\n        });\n\n        [enableList, disableList].forEach(function(state, index) {\n            state.forEach(function(data) {\n                if (!html[index]) html[index] = '';\n                html[index] += sd.tmpl.member(data);\n            });\n\n            elmList[index].html(html[index]);\n        });\n\n        $result.empty().append(elmList);\n    }\n\n    function _handleClickBtn(e) {\n        if ($root.is(':visible')) {\n            _hide();\n        } else {\n            $root.show();\n        }\n    }\n\n    function _hide() {\n        $root.hide();\n    }\n\n    // 바인드 이벤트\n    function _bindEvent() {\n        $result.on('change', '.js-all-check-item', _handleChange);\n        $btn.on('click', _handleClickBtn);\n        store.on('renderSplit', render);\n        store.on('randomTargetHide', _hide);\n    }\n\n    // 초기화\n    function init() {\n        _bindEvent();\n        render();\n    }\n\n    init();\n}\n","(function(window, $, modal) {\n    // api 저장\n    var apiCommit = '/game/insert';\n\n    // 사다리 종류\n    var sadariType = 'one';\n\n    // 현재 선택된 게임 타입\n    var selectedGameType = null;\n\n    // 최초 순수 구성원\n    var _backupInitMember;\n\n    // 필터 적용 된 구성원\n    var filterbackpackr;\n\n    // 랜덤 적용 된 구성원\n    var randombackpackr = [];\n\n    // 결과값 저장 임시 공간\n    var temp;\n\n    // 최종 결과 데이타 (모달 출력 데이터)\n    var lastResult;\n\n    // cssClass 제외된 유저\n    var disableClass = 'is_disable';\n\n    // jquery dom member body\n    var $memberBody = $('.member-list.body');\n\n    // jquery dom member list\n    var $memberList;\n\n    // jquery dom\n    var $wrap = $('.sadari.wrap');\n\n    // 사다리 종류\n    var game = {\n        // 카운트 조회\n        getValue: function(selector) {\n            var value = $(selector).val();\n            return value;\n        },\n        // 한명 뽑기\n        one: function() {\n            var count = this.getValue('#onlyOne');\n            var groupCount = 1;\n            var data = {\n                a: count, // 출력 인원\n                b: groupCount, // 그룹 수\n                c: randombackpackr // 선택 되지 않은 인원\n            };\n\n            result(data);\n        },\n        jo_member: function() {\n            var count = this.getValue('#groupMember') || 3;\n            var groupCount = Math.ceil(randombackpackr.length / count);\n            var data = {\n                a: count, // 한조 인원\n                b: groupCount, // 그룹 수\n                c: randombackpackr // 랜덤 값\n            };\n\n            result(data, true);\n        },\n        jo_team: function() {\n            var count = this.getValue('#groupCount') || 3;\n            var groupCount = Math.ceil(randombackpackr.length / count);\n            var data = {\n                a: groupCount, // 한조 인원\n                b: count, // 그룹 수\n                c: randombackpackr // 랜덤 값\n            };\n\n            result(data);\n        },\n        // 주번, 손\n        ju: function() {\n            var count = 1; // 임의값\n            var groupCount = ju.length;\n            var data = {\n                a: count,\n                b: groupCount, // 청소 종류\n                c: randombackpackr,\n                jo_name_ju: true // 조 이름 주번 이름으로 사용\n            };\n\n            result(data);\n        },\n        // 랜덤점심\n        jo_lunch: function() {\n            var groupCount = this.getValue('#groupCount');\n            var groupMemberCount = Math.ceil(\n                randombackpackr.length / groupCount\n            );\n            var data = {\n                groupCount: groupCount\n            };\n\n            // 유효성 검사\n            if (randombackpackr.length == 0 || !groupCount || groupCount == 0) {\n                alert('값을 확인해주세요.');\n                return;\n            }\n\n            resultLunch(data);\n        }\n    };\n\n    // id로 멤버 인덱스 구하기\n    function findIndexById(id) {\n        var index = $('.member-list.body')\n            .find('.member-list.member[data-member-id=\"' + id + '\"]')\n            .index();\n\n        return index;\n    }\n\n    /**\n     * 필터링 적용된 맴버에 한해 랜덤 적용\n     * @return {array}\n     */\n    function filterDisableMember() {\n        var remap = filterbackpackr.slice().filter(function(v) {\n            // 비활성 멤버 제외\n            if (v.is_disable) {\n                return false;\n            }\n            return true;\n        });\n\n        var j; // 임의의 수\n        var x; // 임시 저장 공간\n        var i; // 인원 수 (1씩 감소 됨)\n\n        for (i = remap.length; i; i--) {\n            j = Math.floor(Math.random() * i); // 요기가 핵심\n            x = remap[i - 1]; // 마지막 직원을 임시 공간에 보냄\n            remap[i - 1] = remap[j]; // 마지막 직원 자리에 임의의 번호 직원이 대입됨\n            remap[j] = x; // 임의의 직원 있던 위치에 마지막 직원이 대입 됨\n            // 직원 수 만큼 반복\n        }\n\n        randombackpackr = remap;\n        return true;\n    }\n\n    // 퇴사한 사람, 출근 전 사람 제외\n    function filterWorkMember(memberList) {\n        var now = new Date().getTime();\n        var date;\n        var y;\n        var m;\n        var d;\n\n        function check(x) {\n            if (x === '') {\n                return true;\n            }\n            y = x.substr(0, 4);\n            m = x.substr(4, 2);\n            d = x.substr(6, 2);\n\n            m -= 1;\n            date = Date.UTC(y, m, d);\n            return date;\n        }\n\n        var re = memberList.filter(function(v) {\n            if (v.hasOwnProperty('startDate')) {\n                date = check(v.startDate);\n\n                if (now < date) {\n                    return false;\n                }\n            }\n\n            if (v.hasOwnProperty('resign') && v.resign) {\n                date = check(v.resign);\n\n                if (now > date) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return re;\n    }\n\n    // 결과 html 제작\n    function renderHtml(data, onegroup) {\n        var html = '';\n        try {\n            data.forEach(function(group) {\n                if (onegroup) {\n                    html += '<div class=\"group item onegroup\">';\n                } else {\n                    html +=\n                        '<div class=\"group item\"><div class=\"group title\">' +\n                        group.title +\n                        '</div>';\n                }\n\n                group.member.forEach(function(member, memberIndex) {\n                    html += sd.tmpl.member(member);\n                });\n\n                html += '</div>';\n            });\n        } catch (e) {\n            console.log(e);\n        }\n        return html;\n    }\n\n    // 점심 전용 결과 출력\n    function resultLunch(data) {\n        var list = [];\n\n        // 팀별 직원 정렬\n        $.each(randombackpackr, function(index, memberObj) {\n            // 팀 존재 유무\n            var isTeamExist = false;\n\n            // 현재 팀 이름\n            var thisTeam = memberObj.team;\n\n            // list 배열에 현재 팀 이름 존재 유무 반환\n            $.each(list, function(index, team) {\n                if (team.teamName === thisTeam) {\n                    isTeamExist = true;\n\n                    // break;\n                    return false;\n                }\n            });\n\n            // list 배열에 팀이 없으면 팀을 추가\n            if (!isTeamExist) {\n                list.push({\n                    teamName: memberObj.team,\n                    teamMember: []\n                });\n            }\n\n            // 변경 된 list 배열을 돌면서 팀\n            $.each(list, function(index, team) {\n                if (team.teamName === thisTeam) {\n                    list[index].teamMember.push(memberObj);\n\n                    // break;\n                    return false;\n                }\n            });\n        });\n\n        // 팀별 리스트에서 멤버만 추출\n        var memberListList = (function() {\n            return list.map(function(teamObj, index) {\n                return teamObj.teamMember;\n            });\n        })();\n\n        // 팀별 배열 하나로 병합\n        var memberStack = [];\n        $.each(memberListList, function(index, memberList) {\n            memberStack = memberStack.concat(memberList);\n        });\n\n        // 모든 인원 루프 돌면서 해당 index에 푸시\n        var orderByGroup = [];\n        var i = 0;\n        $.each(memberStack, function(index, member) {\n            if (i == data.groupCount) {\n                i = 0;\n            }\n\n            if (!orderByGroup[i]) {\n                orderByGroup.push({\n                    title: i + 1 + '조',\n                    member: []\n                });\n            }\n\n            orderByGroup[i].member.push(member);\n            i += 1;\n        });\n\n        $wrap.addClass('is_result');\n        modal.open(renderHtml(orderByGroup));\n\n        _gameResultCommit();\n    }\n\n    /**\n     * 결과 출력\n     * @param {object} data 그룹 데이터\n     * a 한 그룹의 인원\n     * b 그룹 수\n     * c 램덤 인원\n     * @param {bool} restGroupType 남은 그룹 방식\n     * @return void\n     */\n    function result(data, restGroupType) {\n        temp = $.extend(true, {}, data);\n\n        var i = 0;\n        var onegroup = data.b === 1;\n        var resultObj = [];\n        var msg;\n\n        // 주번(손) 일 경우 onegroup 옵션 사용 안함\n        if (data.jo_name_ju) {\n            onegroup = false;\n        }\n\n        try {\n            if (data.b <= 0 || data.a <= 0 || data.c.length === 0) {\n                msg = '값을 확인해주세요.';\n                alert(msg);\n                throw new Error(msg);\n            }\n\n            // 그룹 수 만큼 반복\n            while (i < data.b) {\n                var groupData = {\n                    title: data.jo_name_ju ? ju[i] : i + 1 + '조',\n                    member: data.jo_name_ju\n                        ? [data.c[i]]\n                        : data.c.splice(0, data.a)\n                };\n\n                if (restGroupType && groupData.member.length < data.a) {\n                    if (\n                        confirm(\n                            '나머지 인원이 있습니다. 다른 조에 포함 시키겠습니까?'\n                        )\n                    ) {\n                        groupData.member.forEach(function(v, idx) {\n                            resultObj[idx].member.push(v);\n                        });\n                        break;\n                    }\n                }\n\n                resultObj.push(groupData);\n                i++;\n            }\n\n            lastResult = $.extend(true, {}, resultObj);\n\n            $wrap.addClass('is_result');\n            modal.open(renderHtml(resultObj, onegroup));\n\n            _gameResultCommit();\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 상태 업데이트\n     * @param {jquery dom object} $member 멤버 엘리먼트\n     * @param {Boolean} isDisabled 비활성 유무\n     * @return void;\n     */\n    function updateMemberState($member, isDisabled) {\n        try {\n            var index = $member.index();\n\n            // 제외\n            if (isDisabled) {\n                $member.addClass(disableClass);\n                // 제외 해제\n            } else {\n                $member.removeClass(disableClass);\n            }\n\n            filterbackpackr[index].is_disable = isDisabled;\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    // 전체 토글\n    function toggleAllMember(e) {\n        var isChecked = e.currentTarget.checked;\n        var $itemlist = $('.member-list.body .member-list.member');\n\n        $.each($itemlist, function(i, e) {\n            updateMemberState($(e), isChecked);\n        });\n\n        store.emit('updateMemberCount', filterbackpackr);\n        store.emit('renderSplit');\n        store.emit('renderSearch');\n    }\n\n    // 게임 선택\n    function selectSadari() {\n        var idx = $(this)\n            .parent()\n            .index();\n        sadariType = $(this).data('game');\n        selectedGameType = $(this).data('game-id');\n\n        $('.sadari-select')\n            .find('button')\n            .removeClass('is_on');\n        $(this).addClass('is_on');\n        $('.tab')\n            .find('> [class^=tab]')\n            .hide()\n            .eq(idx)\n            .show();\n\n        var tabId = $('.tab')\n            .find('> [class^=tab]')\n            .eq(idx)\n            .attr('data-tab-id');\n\n        if (tabId) {\n            ju = store.emit('getJu-' + tabId)[0];\n        }\n    }\n\n    // 마지막에 당첨된 유저 가져오기\n    function getLastWinUserList() {\n        var url = '/game/last_member_list/' + selectedGameType;\n        $.get(url).done(function(res) {\n            if (!res) {\n                console.log('error');\n                return false;\n            }\n            var res = JSON.parse(res);\n            updateUserList(res);\n        });\n    }\n\n    // 멤버 상태 초기화\n    function resetMemberState(render) {\n        var $itemlist = $('.member-list.body .member-list.member');\n\n        $.each($itemlist, function(i, e) {\n            updateMemberState($(e), false);\n        });\n\n        if (!render) {\n            store.emit('updateMemberCount', filterbackpackr);\n        }\n    }\n\n    // 멤버들 상태 업데이트\n    function updateUserList(res) {\n        var $memberList = $('.member-list.body');\n\n        resetMemberState(false);\n\n        $.each(res, function(index, value) {\n            var userId = value.user_id;\n            var $elm = $memberList.find('[data-member-id=\"' + userId + '\"]');\n\n            updateMemberState($elm, true);\n        });\n\n        store.emit('updateMemberCount', filterbackpackr);\n    }\n\n    // 멤버 가져오기\n    function getMember() {\n        return $.getJSON('/member').done(function(res) {\n            var html = '';\n            res.forEach(function(member) {\n                html += sd.tmpl.member(member);\n            });\n            $memberBody.html(html);\n        });\n    }\n\n    // 필터된 멤버 데이터 가져오기\n    function _getAllMemberList() {\n        return filterbackpackr;\n    }\n\n    /**\n     * 유저 선택, 랜더링\n     * @param {int} index 유저 인덱스\n     * @return void;\n     */\n    function _selectUser(index) {\n        var $member = $memberList.eq(index);\n        var isDisabled = true;\n\n        if ($member.is('.is_disable')) {\n            isDisabled = false;\n        }\n\n        updateMemberState($member, isDisabled);\n        store.emit('updateMemberCount', filterbackpackr);\n        store.emit('renderSplit');\n        store.emit('renderSearch');\n    }\n\n    // 게임 데이터 기록, 저장\n    function _gameResultCommit() {\n        try {\n            var data = [];\n            $.each(lastResult, function(index, value) {\n                var title = value.title;\n\n                // loop member\n                $.each(value.member, function(index, value) {\n                    var member = {\n                        group_name: title,\n                        user_id: value.id\n                    };\n\n                    data.push(member);\n                });\n            });\n\n            var param = {\n                game_type: selectedGameType,\n                result_data: data\n                // EXAMPLE result_date\n                // result_data: [\n                //     {\n                //         user_id: 72,\n                //         group_name: 'test',\n                //     },\n                // ]\n            };\n\n            $.post(apiCommit, param).done(function(res) {\n                console.log(res);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    // 게임 종류 리턴\n    function _getGameType() {\n        return sadariType;\n    }\n\n    // 유저 클릭 핸들러\n    function _handleClickMember(e) {\n        e.stopPropagation();\n\n        var $target = $(e.currentTarget);\n        var index = $target.parents('.member-list.member').index();\n\n        store.emit('selectUser', index);\n    }\n\n    // 지난주 걸린 사람 제외하기 버튼 클릭 핸들러\n    function _handleClickPrevMember() {\n        if (selectedGameType === 5) {\n            getLastWinUserList();\n        }\n    }\n\n    function _updateMemberList() {\n        $memberList = $memberBody.find('.member-list.member');\n    }\n\n    // 사다리 시작\n    function startSadari() {\n        filterDisableMember();\n        game[sadariType]();\n        store.emit('renderTextResult');\n        store.emit('randomTargetHide');\n    }\n\n    // 이벤트 바인딩\n    function bindEvent() {\n        $(document)\n            .on(\n                'click',\n                '.member-list.wrap .member-list.member input:checkbox',\n                _handleClickMember\n            )\n            .on('click', '.js-all-check-master', toggleAllMember);\n        $('.sadari-select').on('click', 'button', selectSadari);\n        $('.start').on('click', startSadari);\n        $('.exclude-prev-member').on('click', _handleClickPrevMember);\n\n        store.on('selectUser', _selectUser);\n        store.on('getGameType', _getGameType);\n        store.on('getAllMemberList', _getAllMemberList);\n        store.on('findIndexById', findIndexById);\n    }\n\n    // 멤버 비동기 호출 후 시작\n    function start(res) {\n        bindEvent();\n        _updateMemberList();\n        initData(res);\n        quickSearch();\n        randomTarget();\n\n        store.emit('updateMemberCount', filterbackpackr);\n\n        $('.sadari-select')\n            .find('button:eq(0)')\n            .trigger('click');\n    }\n\n    // 데이터 초기화\n    function initData(data) {\n        _backupInitMember = data.slice();\n        filterbackpackr = filterWorkMember(data.slice());\n    }\n\n    function init() {\n        getMember().done(start);\n    }\n\n    // init();\n})(window, jQuery, modal);\n"]}